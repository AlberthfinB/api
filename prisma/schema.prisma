// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id Int @id @default(autoincrement())
  name String @db.VarChar(45)
  password String @db.VarChar(15)
  email String @unique
  referal_code String @db.VarChar(225)
  created_at DateTime @default(now())
  role_id Int
  role Role @relation(fields: [role_id],references: [role_id])
  user_point User_Point[]
  event Event[]
  transaction Transaction[]
}


model Role {
  role_id Int @id @default(autoincrement())
  role_name String @unique
  user User[]
}

model User_Point{
  user_point_id Int @id @default(autoincrement())
  points Decimal @db.Decimal(18,2)
  created_date DateTime @default(now())
  expiry_date DateTime
  update_at DateTime @updatedAt
  user_id Int
  user User @relation(fields: [user_id],references: [user_id])
}



model Event{
  event_id Int @id @default(autoincrement())
  name_event String @db.VarChar(225)
  location String @db.VarChar(225)
  description String @db.VarChar(1000)
  image_event String
  ticket_price Decimal @db.Decimal(18,2)
  promo_event String
  seats Int
  status_event String
  create_date DateTime @default(now())
  event_expired DateTime
  user_id Int
  user User @relation(fields: [user_id],references: [user_id])
  ticket_id Int
  ticket_type Ticket_Type @relation(fields: [ticket_id],references: [ticket_id])
  event_category_id Int 
  event_category Event_Category @relation(fields: [event_category_id],references: [event_category_id])
  transaction_detail Transaction_Detail[]
}


model Ticket_Type {
  ticket_id Int @id @default(autoincrement())
  ticket_type String
  event Event[]
}

enum Event_Category_Name {
  Music
  Workshop
  Food
  Travel
}

model Event_Category {
  event_category_id Int @id @default(autoincrement())
  event_category_name Event_Category_Name
  event Event[]
}

model Transaction_Detail {
  transaction_detail_id Int @id @default(autoincrement())
  event_id Int 
  event Event @relation(fields: [event_id],references: [event_id])
  transaction_id Int
  transaction Transaction @relation(fields: [transaction_id],references: [transaction_id])
}

model Transaction {
  transaction_id Int @id @default(autoincrement())
  transaction_date String @db.VarChar(50)
  payment_status Boolean @default(false)
  payment_proof String @db.VarChar(100)
  payment_date DateTime @default(now())
  total_payment Decimal @db.Decimal(18,2)
  payment_code String @db.VarChar(100)
  discount_point Decimal @db.Decimal(18,2)
  discount_voucher Decimal @db.Decimal(18,2)
  total_price Decimal @db.Decimal(18,2)
  user_id Int 
  user User @relation(fields: [user_id],references: [user_id])
  voucher_id Int @unique
  voucher Voucher @relation(fields: [voucher_id],references: [voucher_id])
  transaction_detail Transaction_Detail[]
}

model Voucher {
  voucher_id Int @id @default(autoincrement())
  Transaction Transaction?
}
